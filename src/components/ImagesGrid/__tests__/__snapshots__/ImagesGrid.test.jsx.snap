// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render ImagesGrid in favorites mode properly 1`] = `
<div
  className="container"
>
  <div
    className="images-wrapper"
  >
    <div
      className="image-wrapper"
      key="1"
    >
      <img
        alt="tags"
        className="image"
        onClick={[Function]}
        role="button"
        src="test_url"
        tabIndex={0}
      />
      <div
        className="favorite-btn"
      >
        <ForwardRef(SvgFavorite)
          height={24}
          width={24}
        />
      </div>
    </div>
    <div
      className="image-wrapper"
      key="2"
    >
      <img
        alt="tags"
        className="image"
        onClick={[Function]}
        role="button"
        src="test_url"
        tabIndex={0}
      />
      <div
        className="favorite-btn"
      >
        <ForwardRef(SvgFavorite)
          height={24}
          width={24}
        />
      </div>
    </div>
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render ImagesGrid properly initially 1`] = `
<div
  className="container hidden"
>
  <div
    className="spinner-wrapper"
    onClick={[MockFunction]}
    role="button"
  >
    <ForwardRef(SvgSadFace)
      height={48}
      width={48}
    />
    No results found!
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render ImagesGrid properly when error 1`] = `
<div
  className="container"
>
  <div
    className="spinner-wrapper"
  >
    <ForwardRef(SvgSadFace)
      height={48}
      width={48}
    />
    Something went wrong, try again
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render ImagesGrid properly when images loaded 1`] = `
<div
  className="container"
>
  <div
    className="images-wrapper"
  >
    <div
      className="image-wrapper"
      key="1"
    >
      <img
        alt="tags"
        className="image"
        onClick={[Function]}
        role="button"
        src="test_url"
        tabIndex={0}
      />
      <div
        className="delete-btn"
      >
        <ForwardRef(SvgCross)
          height={24}
          width={24}
        />
      </div>
    </div>
    <div
      className="image-wrapper"
      key="2"
    >
      <img
        alt="tags"
        className="image"
        onClick={[Function]}
        role="button"
        src="test_url"
        tabIndex={0}
      />
      <div
        className="delete-btn"
      >
        <ForwardRef(SvgCross)
          height={24}
          width={24}
        />
      </div>
    </div>
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render ImagesGrid properly when loading 1`] = `
<div
  className="container"
>
  <div
    className="spinner-wrapper"
  >
    <ForwardRef(SvgThinkFace)
      height={48}
      width={48}
    />
    Loading
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render ImagesGrid properly when no images found 1`] = `
<div
  className="container"
>
  <div
    className="spinner-wrapper"
    onClick={[MockFunction]}
    role="button"
  >
    <ForwardRef(SvgSadFace)
      height={48}
      width={48}
    />
    No results found!
  </div>
  <Modal
    ariaHideApp={true}
    bodyOpenClassName="ReactModal__Body--open"
    className="modal"
    closeTimeoutMS={0}
    contentElement={[Function]}
    isOpen={false}
    onRequestClose={[Function]}
    overlayClassName="overlay"
    overlayElement={[Function]}
    parentSelector={[Function]}
    portalClassName="ReactModalPortal"
    preventScroll={false}
    role="dialog"
    shouldCloseOnEsc={true}
    shouldCloseOnOverlayClick={true}
    shouldFocusAfterRender={true}
    shouldReturnFocusAfterClose={true}
  />
</div>
`;

exports[`App should render big image in modal on image click 1`] = `
<div
  className="modal-content"
>
  <img
    alt="tags"
    className="image"
    src="large_url"
  />
</div>
`;
